#!/usr/bin/perl

# Name for Factoids
$owner="loreley"; # e.g. "Sonya"
# Title for pages
$title="$owner Factoids";
# Factoids database
$factoidsdb="/home/trac/botde/data/#/Factoids.db";
# If you want to name your files something other then factoids* change this
$filebase="/home/trac/www/loreley";
# If you want to copy the factoids-*.html somewhere set the path here
$htmlpath="/home/trac/www/";
# if you want to change the css file do so here
$cssfile="http://code.zikula.org/mainstyle.css";
# You can set the above variables in a factoids.config file
if (open(IN,"$filebase.config")){
while(<IN>){
eval($_);
}
close(IN);
}
# Lets dump out the data
# First we make a file with the sql we need
open (OUT,">$filebase-dump.sql")||die "failed to open $filebase-dump.sql for writing: $!";
print OUT ".output $filebase.dump\n.separator ~|~\nselect key,factoids.id,added_by,added_at,fact from keys,factoids where keys.id=factoids.key_id;\n.quit\n.quit\n\n";
close(OUT);
# Then we run it through sqlite to get out dump
system("echo .quit | sqlite -init $filebase-dump.sql $factoidsdb");#||die "failed to make dump with sqlite, is it installed?: $!";
open(IN,"$filebase.dump")||die "failed to open $filebase.dump : $!";
# localtime returns months with 0 as January
my @months=('January','February','March','April','May','June','July','August','September','October','November','December');
my @date=localtime(time());
# # We want all time digits to print as 2 digits
# # e.g. midnight is 00:00:00
my $i=0;
for ($i=0;$i<=2;$i++){
while (length($date[$i])<=1){
$date[$i]='0'.$date[$i];
}
}
# localtime returns the years after 1900
$date[5]+=1900;
$updatemsg="Last update: $date[3] ".$months[$date[4]]." $date[5] $date[2]:$date[1]:$date[0]\n";
while(<IN>){
s/\s*$//;
@field=split(/\~\|\~/);
@date=localtime($field[3]);
$date[5]+=1900;
$field[4]=~s/([hf]t{1,2}p\:\/\/.+?)(\s+)/\<a\ href\=\"$1\"\>$1\<\/a\>$2/g || $field[4]=~s/([hf]t{1,2}p\:\/\/.+?)$/\<a\ href\=\"$1\"\>$1\<\/a\>/g;
$hash{$field[0]}{'content'}.='<br>' if (length($hash{$field[0]}{'content'}));
$hash{$field[0]}{'content'}.=$field[4];
($hash{$field[0]}{'nicedate'}="$date[5] ".$months[$date[4]]." $date[3]") && ($hash{$field[0]}{'date'}=$field[3]) if ($hash{$field[0]}{'date'}<$field[3]);
$hash{$field[0]}{'author'}.=" ".$field[2] if (!($hash{$field[0]}{'author'}=~/$field[2]/));
}
open(OUT,">$filebase-date.html")||die "failed to open >$filebase-date.html : $!";
print OUT "<html><head><title>$title by Date</title><link href=\"$cssfile\" rel=\"stylesheet\" type=\"text/css\"></head><body>";
print OUT "<p>$updatemsg</p>";
print OUT "\n".'<hr/>';
foreach $key (sort {$hash{$b}{'date'} <=> $hash{$a}{'date'}} keys(%hash)){
print OUT "<a href=\"#$key\">$key</a> ";
if ($key) {
$mainbody.="<dt><a name=\"$key\"><b>$key</b></dt><dd>By: <i>$hash{$key}{'author'}</i><br>Date: $hash{$key}{'nicedate'}<br>$hash{$key}{'content'}</dd>\n";
}
}
print OUT "\n".'<hr/>';
print OUT "\n".'<dl>'.$mainbody.'</dl></body></html>';
close OUT;
open(OUT,">$filebase-alpha.html")||die "failed to open >$filebase-alpha.html : $!";
$mainbody="";
print OUT "<html><head><title>$title Alphabetized</title><link href=\"$cssfile\" rel=\"stylesheet\" type=\"text/css\"></head><body>";
print OUT "<p>$updatemsg</p>";
print OUT "\n".'<hr/>';
foreach $key (sort {uc($a) cmp uc($b)} keys(%hash)){
if ($key) {
print OUT "<a href=\"#$key\">$key</a> ";
$mainbody.="<dt><a name=\"$key\"><b>$key</b></dt><dd>By: <i>$hash{$key}{'author'}</i><br>Date: $hash{$key}{'nicedate'}<br>$hash{$key}{'content'}</dd>\n";
}
}
print OUT "\n".'<hr/>';
close(IN);
print OUT "\n".'<dl>'.$mainbody.'</dl>';
close(OUT);
